#!/usr/bin/env bash
# Copyright (c) 2020 The Toltec Contributors
# SPDX-License-Identifier: MIT

pkgnames=(folly)
pkgdesc="Z-machine interpreter for interactive fiction"
url="https://github.com/bkirwi/folly"
pkgver=0.0.1-2
timestamp=2022-01-29T15:35:52-05:00
section=games
maintainer="Ben Kirwin <ben@kirw.in>"
license=MIT
installdepends=(display)
makedepends=(build:librust-clang-sys-dev build:libclang-dev build:libc6 build:libc6-dev build:clang)

image=rust:v2.3

# Whitespace-separated list of source archives that are needed to build the package
source=(
    https://github.com/bkirwi/folly/archive/842bad4f0d6e0f35cd92d4693896ed353821a1fd.zip
    folly.draft
)
# SHA-256 checksums of the source archives above
sha256sums=(
    9283495e87c0b4c383703b7c8514b17ead77298681eed0a186f4141fa9b129a8
    SKIP
)

build() {
    local cpp_includes
    local gcc_version
    gcc_version="$("$CROSS_COMPILE"gcc -dumpfullversion)"
    cpp_includes="$(realpath "$SYSROOT"/../include/c++/"$gcc_version")"

    # Arguments for bindgen's usage of clang
    export BINDGEN_EXTRA_CLANG_ARGS="--sysroot=$SYSROOT -I$cpp_includes \
        -I$cpp_includes/$NGCONFIG"

    # Arguments for the gcc-based tensorflow build in the build.rs file of tflite-rs.
    export TFLITE_RS_MAKE_TARGET_TOOLCHAIN_PREFIX="$CROSS_COMPILE"
    export TFLITE_RS_MAKE_EXTRA_CFLAGS="$BINDGEN_EXTRA_CLANG_ARGS \
        -mfpu=neon -mfloat-abi=hard -mcpu=cortex-a9"

    cargo build --release

    # Save the build system the trouble of stripping unused binaries
    rm -r target/release/build
    rm -r target/*/release/build
}

package() {
    # Install the app binary and the draft file
    install -D -m 755 "$srcdir"/target/*/release/folly "$pkgdir"/opt/bin/folly
    install -D -m 644 "$srcdir"/folly.draft "$pkgdir"/opt/etc/draft/folly.draft
}
