#!/usr/bin/env bash
# Copyright (c) 2023 The Toltec Contributors
# SPDX-License-Identifier: MIT

archs=(rm1 rm2)
pkgnames=(toltec-base)
pkgdesc="Metapackage defining the base set of packages in a Toltec install"
url=https://toltec-dev.org/
pkgver=1.3-1
timestamp=2023-12-27T08:30Z
section="utils"
maintainer="Eeems <eeems@eeems.email>"
license=MIT
installdepends=(toltec-bootstrap toltec-completion)
installdepends_rm1=(open-remarkable-shutdown)
installdepends_rm2=(rm2-suspend-fix)

source=(
    entware-rc@.service
    rcctl
)
sha256sums=(
    SKIP
    SKIP
)

package() {
    install -D -m 666 -t "$pkgdir"/lib/systemd/system/entware-rc@.service "$srcdir"/entware-rc@.service
    install -D -m 755 -t "$pkgdir"/opt/bin/rcctl "$srcdir"/rcctl
}

configure() {
    systemctl daemon-reload
    ln -sf /opt/etc/profile /etc/profile.d/toltec.sh
    # shellcheck disable=SC2016
    sed -i \
        -e 's|^export TERM=xterm|if \[ -z "$TERM" \];then export TERM=xterm;fi|' \
        /opt/etc/profile
    echo "Disabling automatic update"
    disable-unit update-engine.service
    if [[ "$arch" == "rm1" ]]; then
        echo "Disabling usb1 network device to avoid long boots"
        if ! is-masked sys-subsystem-net-devices-usb1.device; then
            systemctl mask sys-subsystem-net-devices-usb1.device
        fi
        if ! is-masked busybox-ifplugd@usb1.service; then
            systemctl mask busybox-ifplugd@usb1.service
        fi
    elif [[ "$arch" == "rm2" ]]; then
        echo "Enabling usb1 network device to ensure usb SSH works"
        if is-masked sys-subsystem-net-devices-usb1.device; then
            systemctl unmask sys-subsystem-net-devices-usb1.device
        fi
        if is-masked busybox-ifplugd@usb1.service; then
            systemctl unmask busybox-ifplugd@usb1.service
        fi
    fi
    echo ""
    echo "You can use rcctl to manage services installed by entware"
}

postremove() {
    if is-masked sys-subsystem-net-devices-usb1.device; then
        systemctl unmask sys-subsystem-net-devices-usb1.device
    fi
    if is-masked busybox-ifplugd@usb1.service; then
        systemctl unmask busybox-ifplugd@usb1.service
    fi
    if ! is-enabled update-engine.service; then
        systemctl enable update-engine
    fi
}
