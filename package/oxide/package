#!/usr/bin/env bash
# Copyright (c) 2021 The Toltec Contributors
# SPDX-License-Identifier: MIT

pkgnames=(erode fret oxide rot tarnish decay corrupt anxiety liboxide libsentry)
pkgver=2.4-1
timestamp=2022-05-22T03:18:32Z
maintainer="Eeems <eeems@eeems.email>"
url=https://oxide.eeems.codes
license=MIT
flags=(patch_rm2fb)
image=qt:v2.3
source=("https://github.com/Eeems-Org/oxide/archive/e6c62a6860b52cd1cbd47e21377f8d1ecf72bb0a.tar.gz")
sha256sums=(a29cf455d5f66fee4ee67722c6f1d20627930920286398932c3d5c813d58ebee)

build() {
    find . -name "*.pro" -type f -print0 \
        | xargs -r -0 sed -i 's/linux-oe-g++/linux-arm-remarkable-g++/g'
    CMAKE_TOOLCHAIN_FILE="/usr/share/cmake/$CHOST.cmake" make FEATURES=sentry release
}

erode() {
    pkgdesc="Task manager"
    section="admin"
    installdepends=(display "tarnish=$pkgver" "liboxide=$pkgver" "libsentry=0.4.13")

    package() {
        install -D -m 755 -t "$pkgdir"/opt/bin "$srcdir"/release/opt/bin/erode
        install -D -m 644 -t "$pkgdir"/opt/etc/draft/icons "$srcdir"/release/opt/etc/draft/icons/erode.svg
        install -D -m 644 -t "$pkgdir"/opt/etc/draft/icons "$srcdir"/release/opt/etc/draft/icons/erode-splash.png
        install -D -m 644 -t "$pkgdir"/opt/usr/share/applications "$srcdir"/release/opt/usr/share/applications/codes.eeems.erode.oxide
    }
}

fret() {
    pkgdesc="Take screenshots"
    section="utils"
    installdepends=("tarnish=$pkgver" "liboxide=$pkgver" "libsentry=0.4.13")

    package() {
        install -D -m 755 -t "$pkgdir"/opt/bin "$srcdir"/release/opt/bin/fret
        install -D -m 644 -t "$pkgdir"/opt/usr/share/applications "$srcdir"/release/opt/usr/share/applications/codes.eeems.fret.oxide
    }
}

oxide() {
    pkgdesc="Launcher application"
    section="launchers"
    installdepends=("erode=$pkgver" "fret=$pkgver" "tarnish=$pkgver" "rot=$pkgver" "decay=$pkgver" "liboxide=$pkgver" "libsentry=0.4.13")

    package() {
        install -D -m 755 -t "$pkgdir"/opt/bin "$srcdir"/release/opt/bin/oxide
        install -D -m 644 -t "$pkgdir"/opt/etc "$srcdir"/release/opt/etc/oxide.conf
        install -D -m 644 -t "$pkgdir"/opt/etc/draft/icons "$srcdir"/release/opt/etc/draft/icons/oxide-splash.png
        install -D -m 644 -t "$pkgdir"/opt/usr/share/applications "$srcdir"/release/opt/usr/share/applications/codes.eeems.oxide.oxide
    }
    configure() {
        if ! is-enabled "tarnish.service"; then
            echo ""
            echo "Run the following command(s) to use $pkgname as your launcher"
            how-to-enable "tarnish.service"
            echo ""
        fi
    }
}

rot() {
    pkgdesc="Manage Oxide settings through the command line"
    section="admin"
    installdepends=("tarnish=$pkgver" "liboxide=$pkgver" "libsentry=0.4.13")

    package() {
        install -D -m 755 -t "$pkgdir"/opt/bin "$srcdir"/release/opt/bin/rot
    }
}

tarnish() {
    pkgdesc="Service managing power states, connectivity and buttons"
    section="devel"
    installdepends=(display xochitl "liboxide=$pkgver" "libsentry=0.4.13")

    package() {
        install -D -m 644 -t "$pkgdir"/etc/dbus-1/system.d "$srcdir"/release/etc/dbus-1/system.d/codes.eeems.oxide.conf
        install -D -m 644 -t "$pkgdir"/lib/systemd/system "$srcdir"/release/etc/systemd/system/tarnish.service
        install -D -m 755 -t "$pkgdir"/opt/bin "$srcdir"/release/opt/bin/tarnish
    }
    configure() {
        systemctl daemon-reload
    }
    preremove() {
        if is-active tarnish; then
            echo "Stopping tarnish"
            systemctl stop tarnish
        fi
        if is-enabled tarnish; then
            echo "Disabling tarnish"
            systemctl disable tarnish
        fi
    }
    postremove() {
        systemctl daemon-reload
    }
}

decay() {
    pkgdesc="Lockscreen application"
    section="utils"
    installdepends=(display "tarnish=$pkgver" "liboxide=$pkgver" "libsentry=0.4.13")

    package() {
        install -D -m 755 -t "$pkgdir"/opt/bin "$srcdir"/release/opt/bin/decay
        install -D -m 644 -t "$pkgdir"/opt/usr/share/applications "$srcdir"/release/opt/usr/share/applications/codes.eeems.decay.oxide
    }
}
corrupt() {
    pkgdesc="Task Switcher for Oxide"
    section="utils"
    installdepends=(display "tarnish=$pkgver" "liboxide=$pkgver" "libsentry=0.4.13")

    package() {
        install -D -m 755 -t "$pkgdir"/opt/bin "$srcdir"/release/opt/bin/corrupt
        install -D -m 644 -t "$pkgdir"/opt/usr/share/applications "$srcdir"/release/opt/usr/share/applications/codes.eeems.corrupt.oxide
    }
}

anxiety() {
    pkgdesc="Screenshot viewer for Oxide"
    section="utils"
    installdepends=(display "tarnish=$pkgver" "liboxide=$pkgver" "libsentry=0.4.13")

    package() {
        install -D -m 755 -t "$pkgdir"/opt/bin "$srcdir"/release/opt/bin/anxiety
        install -D -m 644 -t "$pkgdir"/opt/usr/share/applications "$srcdir"/release/opt/usr/share/applications/codes.eeems.anxiety.oxide
        install -D -m 644 -t "$pkgdir"/opt/etc/draft/icons "$srcdir"/release/opt/etc/draft/icons/image.svg
        install -D -m 644 -t "$pkgdir"/opt/etc/draft/icons "$srcdir"/release/opt/etc/draft/icons/anxiety-splash.png
    }
}

liboxide() {
    pkgdesc="Shared library for oxide applications"
    section=devel

    package() {
        install -D -m 755 -t "$pkgdir"/opt/usr/lib "$srcdir"/release/opt/usr/lib/libliboxide.so*
    }
}

libsentry() {
    pkgdesc="Sentry SDK for C, C++ and native applications."
    section=devel
    url=https://github.com/getsentry/sentry-native
    pkgver="0.4.17"
    timestamp="2021-12-20T14:25:11Z"

    package() {
        install -D -m 755 -t "$pkgdir"/opt/lib "$srcdir"/release/opt/lib/libsentry.so
    }
}
